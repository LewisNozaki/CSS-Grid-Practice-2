*, 
*:before, 
*:after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  background-image: linear-gradient(to bottom right, cornflowerblue, aquamarine);
  color: white;
  font-family: sans-serif;
}

a {
  text-decoration: none;
  color: white;
  font-size: 2em;
  font-weight: 900;
  transition: color 0.3s ease-in-out;
}

a:hover {
  color: aquamarine;
}

.title {
  border: 1px solid transparent;
  padding: 2em 0;
  text-align: center;
  border: 1px solid white;
}

/* =================
        Grid 1
  ================== */

.grid-container-1 {
  width: 602px;
  border: 1px solid white;
  margin: 0 auto;
  display: grid;
  grid-template: repeat(3, 200px) / repeat(3, 200px);
  /* Grid auto rows and columns will explicitly define the size of any grid item that is automatically placed
     onto the grid container by the browser. In this example, grid item 10, 11, and 12 are automatically placed
     into the grid and the size of their width and height are determined by the grid-auto property. */
  grid-auto-rows: 100px;
  grid-auto-columns: 100px;
}

.grid-item {
  background: hsl(10deg 63% 64%);
  border: 1px solid hsl(10deg 0% 64%);
  font-size: 2em;
  color: white;
  padding: 1em;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* =================
        Grid 2
  ================== */

  .grid-container-2 {
    margin: 0 auto;
    width: 50%;
    height: 70%;
    border: 1px solid white;
    display: grid;
    /* Grid Template Areas */
    /* The height of the rows will fit the content of the element */
    /* Placing a "." inside the template area will define that section to be a blank space */
    grid-template-areas: 
      "header header header"
      "sidebar content content"
      "footer footer footer"
      ". something .";
  }

  .grid-item2 {
    background: black;
    font-size: 2em;
    color: white;
    padding: 1em;
    border: 1px solid white;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .header {
    grid-area: header;
  }

  .sidebar {
    grid-area: sidebar;
  }

  .big {
    grid-area: content;
  }

  .footer {
    grid-area: footer;
  }

  /* Any grid item that is not explicitly given a grid area will be placed in a new implicity row on the bottom */

  .LO {
    background: lightpink;
  }

  .something {
    grid-area: something;
  }

  /* =================
        Grid 2
  ================== */

  .grid-container-3 {
    /* width: 90%; */
    /* margin: 0 auto; */
    display: grid;
    grid-template-columns: 5em auto 5em;
    grid-template-areas: 
      "header header header"
      "...... content ......"
      "...... sidebar ......"
      "footer footer footer";
    height: calc(100% - 191px);
  }
  
  .grid-item3 {
    background: aquamarine;
    font-size: 2em;
    color: #444;
    padding: 1em;
    border: 1px solid #333;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* 600px or more */
  @media only screen and (min-width: 1000px) {
    .grid-container-3 {
      grid-template-columns: 15% 40% 30% 15%;
      grid-template-rows: 15% 70% 15%;
      grid-template-areas: 
        "header header header header"
        "..... content sidebar ....."
        "footer footer footer footer"
      ;
    }
  }

  .H {
    grid-area: header;
  }

  .S {
    grid-area: sidebar;
  }

  .C {
    grid-area: content;
  }

  .F {
    grid-area: footer;
  }
